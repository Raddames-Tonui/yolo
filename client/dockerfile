# Build stage
FROM node:16-alpine3.16 as build-stage

# working directory inside the container
WORKDIR /client

COPY package*.json ./

# Install dependencies 
RUN npm install --only=production && \
    npm cache clean --force && \
    rm -rf /tmp/*

# Copy code
COPY . .

# Build the application 
RUN npm run build && \
    npm prune --production

# Production stage
FROM node:16-alpine3.16 as production-stage

WORKDIR /client

# Copy only the necessary files from the build stage
COPY --from=build-stage /client/build ./build
COPY --from=build-stage /client/public ./public
COPY --from=build-stage /client/src ./src
COPY --from=build-stage /client/package*.json ./

# Set the environment variable for the app
ENV NODE_ENV=production

# Expose the port used by the app
EXPOSE 3000

# Prune the node_modules directory to remove development dependencies and clears the npm cache and removes any temporary files


# Start the application
CMD ["npm", "start"]