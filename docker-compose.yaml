version: "3.8"

services:
  
  # Build the frontend Docker image and create the frontend microservice
  tonui-yolo-client:
    image: tonui/tonui-yolo-client:v1.0.0
    build: ./client
    container_name: tonui-yolo-client
    stdin_open: true
    tty: true
    ports:
      - "3000:80"  # Map container port 80(for ngnix) to host port 3000
    depends_on:
      - tonui-yolo-backend
    networks:
      - app-net

  # Build the backend Docker image and create the backend microservice
  tonui-yolo-backend:
    image: tonui/tonui-yolo-backend:v1.0.0
    build: ./backend
    container_name: tonui-yolo-backend
    stdin_open: true
    tty: true
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - app-ip-mongo
    networks:
      - app-net

  # Create the database microservice
  app-ip-mongo:
    image: mongo
    container_name: app-mongo
    ports:
      - "27017:27017"
    networks:
      - app-net
    volumes:
      - type: volume
        source: app-mongo-data
        target: /data/db
  
# Create the network infrastructure necessary for the containers to communicate with each other
networks:
  app-net:
    name: app-net
    driver: bridge
    attachable: true
    ipam:
      config:
        - subnet: 172.20.0.0/16
          ip_range: 172.20.0.0/16

# Create a Docker volume that persists all the data stored in the database
volumes:
  app-mongo-data:
    driver: local
