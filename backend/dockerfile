# Use Node.js 16 Alpine image for the build stage
FROM node:16-alpine AS build

# Set the working directory inside the container
WORKDIR /usr/src/app

# Copy package.json and package-lock.json first to leverage Docker cache
COPY package*.json ./

# Install application dependencies (production and dev dependencies for build)
RUN npm install

# Copy the rest of the application code
COPY . .

# Create a minimal runtime image based on Alpine
FROM node:16-alpine

# Set the working directory in the final image
WORKDIR /app

# Copy only the necessary files from the build stage (dependencies + code)
COPY --from=build /usr/src/app /app

# Expose the port the app will run on
EXPOSE 5000

# Define the default command to run the app
CMD ["node", "server.js"]
